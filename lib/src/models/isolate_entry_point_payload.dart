import 'dart:isolate';

import 'package:flutter/services.dart';
import 'package:isolate_logger/src/services/log_service.dart';

/// Payload class used for communication between the main isolate and spawned isolates.
///
/// The [IsolateEntryPointPayload] class encapsulates necessary information to communicate
/// between isolates, including the IsolateToken, LogService, SendPort, and log file name prefix.
class IsolateEntryPointPayload {
  /// The token representing the spawned isolate.
  final RootIsolateToken isolateToken;

  /// Instance of interface to update log files
  final ILogService logService;

  /// The `SendPort` used to send results back to the main isolate.
  final SendPort mainSendPort;

  /// The prefix to be used for log file names generated by the isolate.
  final String logFileNamePrefix;

  /// Creates an instance of [IsolateEntryPointPayload] with the specified parameters.
  const IsolateEntryPointPayload({
    required this.isolateToken,
    required this.logService,
    required this.mainSendPort,
    required this.logFileNamePrefix,
  });
}
